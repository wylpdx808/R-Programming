install.packages("KernSmooth")
library(KernSmooth)
find.package("KernSmooth")
library(KernSmooth)
find.package("devtools")
find.package("devtools")
install.packages("devtools")
find.package('devtools')
library(devtools)
find _rtools()
find.rtools()
find_rtools()
x<-matrix(1:6, 2,3)
x
swirl()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(555,z)
z <- c(z,555,z)
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files())
arg(list.files)
args(list.files)
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
ls()
dir()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest2.R')
?file.rename
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path('folder1/mytest3.R')
file.path('folder1','folder2')
?dir.create
dir.create('testdir2'), file.path('testdir2','testdir3')
dir.create('testdir2'); file.path('testdir2','testdir3')
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2),times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c('My','name','is')
my_char
paste(my_char,collapse = '')
paste(my_char,collapse = ' ')
my_name <- c(my_char, 'Wai Yan')
my_name
paste(my_name, collapse= ' ')
paste('Hello', 'world!', sep = ' ')
paste(1:3, c('X','Y','Z'), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5, NA)
x * 3
y <-rnorm(1000)
z <-rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect1, vectc)
identical(vect1, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix
matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c(Bill, Gina, Kelly, Sean)
patients <- c('Bill', 'Gina','Kelly', 'Sean')
cbind(patients, my_matrix)
my_data<- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c('patient','age','weight','bp','rating','test')
?colnames
colnames(my_data) <- cnames
my_data
y<-10
f<- function(x) {}
f<- function(x) {
y<-2
y^2 + g(x)
}
g<- function(x){
x*y
}
f(3)
T == T
FALSE | FALSE
isTRUE(3)
args(mean)
std(4)
stdev(4)
sd(4)
std(4)
args <- c('this','stuff','is')
args
args['this']
args[['this']]
args <- list('this','stuff','is','cool')
args
arts['this']
args[]
args['this']
args[['this']]
"%p%" <- function(left, right){ # Remember to add arguments!
left + " " + right
}
"good" %p% "job"
"%p%" <- function(left, right){ # Remember to add arguments!
paste(left, right)
}
"good" %p% "job"
getwd()
setwd("C:/Users/japor/Desktop/R programming/Week 2/")
getwd()
test <- read.csv(dir()[1])
head(test)
setwd("C:/Users/japor/Desktop/R programming/Week 2/specdata")
getwd()
test <- read.csv(dir()[1])
head(test)
n<- complete.cases(test['sulfate'],test['nitrate'])
test[n,]
test[!n,]
length(n)
?dim
dim(n)
class(n)
data[n,$sulfate]
data[n,2]
data[n,]
n <- complete.cases(data['sulfate'],data['nitrate'])
test[n,$sulfate]
test[n,2]
length(test[n,2])
length(test[n,3])
117*4
length(test[n])
length(test[n,])
length(test[n,2])
id <- c()
id <- c(id, 2)
id
id <- c(id, 5)
id
nobs <- c()
nobs <- c(nobs, length(test[n,2]))
nobs
rm(list = ls())
data.frame(foo=1:4, bar = c(T,T,F,F))
getwd()
setwd('..')
getwd()
source('complete.R')
complete('specdata', 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
cc <- complete(getwd())
cc <- complete('specdata')
cc
findcorr <- cc['nobs'] >150
findcorr
threshold = 150
findcorr <- cc['nobs'] > threshold
cc[findcorr][$nobs]
subset(cc, cc$nobs > 200)
findcorrelation <- subset(cc, cc$nobs > 200)
findcorrelation$id
?cor
x <- c(1,2,3,4 NA)
x <- c(1,2,3,4, NA)
y <- c(1,NA,3,4,5)
cor(x,y, na.rm = TRUE)
cor(x,y, use = 'complete.obs')
y <- c(2,NA,3,4,4)
cor(x,y, use = 'complete.obs')
cor(x,y, use = 'everything')
X<-c(1,2,3,4)
Y<-c(1,3,4,5)
cor(X,Y)
X<-c(1,3,4)
Y<-c(1,3,4)
cor(X,Y)
x
y
cor(x,y,user = 'complete.obs')
cor(x,y,use = 'complete.obs')
y <- c(2,NA,3,4,4)
cor(x,y,use = 'complete.obs')
y <- c(1,NA,3,4,4)
cor(x,y,use = 'complete.obs')
x
y
X
Y
cor(x,y,use='na.or.complete')
cor(x,y,use='pairwise.complete.obs')
cor(c(1,2,3,4),c(1,3,4,4))
test <- read.csv('001.csv')
corr <- cor(test$sulfate, test$nitrate, use = 'pairwise.complete.obs')
correlations =c()
correlations = c(correlations, corr)
correlations
getwd()
setwd('...')
getwd(0)
getwd()
setwd('..')
getwd()
source('complete.R')
source('corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit()
dir()
setwd('..')
dir()
submit()
source('pollutantmean.R')
pollutantmean('specdata','sulfate',1:10)
pollutantmean('specdata','nitrate',70:72)
pollutantmean('specdata','sulfate',34)
pollutantmean('specdata','nitrate')
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete('specdata',54)
print(cc$nobs)
set.seed(42)
cc <- complete('specdata',332:1)
use <- sample(332, 10)
print(cc[use,"nobs"])
cr <- corr('specdata')
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr),5)],4)
print(out)
cr <- corr('specdata',129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n,5)],4))
print(out)
cr <- corr('specdata',2000)
n<-length(cr)
cr <- corr('specdata', 1000)
cr<-sort(cr)
print(c(n, round(cr,4)))
